// Code generated by scg 1, .
//
// EchoGame-Router file
//
// Command:
// scg
//.

package v1

import (
	"net/http"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"

	"github.com/ThCompiler/go_game_constractor/director/scriptdirector"
	"github.com/ThCompiler/go_game_constractor/marusia/runner"
	"github.com/ThCompiler/go_game_constractor/pkg/logger"
	loghttp "github.com/ThCompiler/go_game_constractor/pkg/logger/http"
)

// NewRouter -.
func NewEchoGameRouter(
	server *gin.Engine,
	l logger.Interface,
	opEchoGame scriptdirector.SceneDirectorConfig,
	runner runner.ScriptRunner,
) {
	// Options
	corsConfig := cors.DefaultConfig()
	corsConfig.AllowOrigins = []string{"http://localhost", "https://skill-debugger.marusia.mail.ru"}
	corsConfig.AllowMethods = []string{"POST"}

	server.Use(cors.New(corsConfig))
	server.Use(gin.Recovery())
	server.Use(loghttp.GinRequestLogger(l))

	//// K8s probe
	server.GET("/healthz", func(c *gin.Context) {
		c.Status(http.StatusOK)
	})

	// Routers
	h := server.Group("/v1")
	{
		newEchoGameRoute(h, opEchoGame, runner, l)
	}
}
