// Code generated by scg 1,  DO NOT EDIT .
//
// EchoGame-Store saver
//
// Command:
// scg
// DO NOT EDIT .

package storesaver

import (
	consts "github.com/ThCompiler/go_game_constractor/scg/example/scg/echogame/consts/textsname"
	"github.com/ThCompiler/go_game_constractor/scg/example/scg/echogame/store"
)

const checkKey = "EchoGame-1fb528cf-73a4-4804-9f30-eed1c54ccfcc"

func checkScriptStore(st store.ScriptStore) bool {
	text, err := st.GetText(checkKey)
	if text != "" && err == nil {
		return true
	}
	return false
}

func saveScripts(st store.ScriptStore) error {
	var err error
	// Set text for Echo scene
	if err = st.SetText(consts.EchoText, `I will Repeat you word`); err != nil {
		return err
	}
	if err = st.SetText(consts.EchoTTS, `I will Repeat you word`); err != nil {
		return err
	}

	// Set text for EchoRepeat scene
	if err = st.SetText(consts.EchoRepeatText, `You say {userText}`); err != nil {
		return err
	}
	if err = st.SetText(consts.EchoRepeatTTS, `You say {userText}`); err != nil {
		return err
	}

	// Set text for Goodbye scene
	if err = st.SetText(consts.GoodbyeText, `GoodyBye`); err != nil {
		return err
	}
	if err = st.SetText(consts.GoodbyeTTS, `GoodyBye`); err != nil {
		return err
	}

	// Set text for Hello scene
	if err = st.SetText(consts.HelloText, `Hello boy. Is number {number}`); err != nil {
		return err
	}
	if err = st.SetText(consts.HelloTTS, `Hello boy. Is number {number}`); err != nil {
		return err
	}

	// Set info of saving text
	if err = st.SetText(checkKey, checkKey); err != nil {
		return err
	}

	return nil
}
func clearOldStores(st store.ScriptStore) error {
	// Get all keys for currentScript of saving text
	keys, err := st.GetAllTextKeyForScript("EchoGame")
	if err != nil {
		return err
	}

	for _, key := range keys {
		_ = st.DeleteText(key)
	}

	return nil
}

func SaveScripts(st store.ScriptStore) error {
	if checkScriptStore(st) {
		return ScriptAlreadySaveError
	}

	err := clearOldStores(st)
	if err != nil {
		return err
	}
	return saveScripts(st)
}
