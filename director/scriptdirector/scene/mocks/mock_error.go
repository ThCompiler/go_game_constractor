// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ThCompiler/go_game_constractor/director/scriptdirector/scene (interfaces: Error)

// Package mock_scene is a generated GoMock package.
package mock_scene

import (
	reflect "reflect"

	scene "github.com/ThCompiler/go_game_constractor/director/scriptdirector/scene"
	gomock "github.com/golang/mock/gomock"
)

// MockError is a mock of Error interface.
type MockError struct {
	ctrl     *gomock.Controller
	recorder *MockErrorMockRecorder
}

// MockErrorMockRecorder is the mock recorder for MockError.
type MockErrorMockRecorder struct {
	mock *MockError
}

// NewMockError creates a new mock instance.
func NewMockError(ctrl *gomock.Controller) *MockError {
	mock := &MockError{ctrl: ctrl}
	mock.recorder = &MockErrorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockError) EXPECT() *MockErrorMockRecorder {
	return m.recorder
}

// GetErrorScene mocks base method.
func (m *MockError) GetErrorScene() scene.Scene {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetErrorScene")
	ret0, _ := ret[0].(scene.Scene)
	return ret0
}

// GetErrorScene indicates an expected call of GetErrorScene.
func (mr *MockErrorMockRecorder) GetErrorScene() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetErrorScene", reflect.TypeOf((*MockError)(nil).GetErrorScene))
}

// GetErrorText mocks base method.
func (m *MockError) GetErrorText() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetErrorText")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetErrorText indicates an expected call of GetErrorText.
func (mr *MockErrorMockRecorder) GetErrorText() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetErrorText", reflect.TypeOf((*MockError)(nil).GetErrorText))
}

// IsErrorScene mocks base method.
func (m *MockError) IsErrorScene() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsErrorScene")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsErrorScene indicates an expected call of IsErrorScene.
func (mr *MockErrorMockRecorder) IsErrorScene() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsErrorScene", reflect.TypeOf((*MockError)(nil).IsErrorScene))
}
