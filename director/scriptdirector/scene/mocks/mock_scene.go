// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ThCompiler/go_game_constractor/director/scriptdirector/scene (interfaces: Scene)

// Package mock_scene is a generated GoMock package.
package mock_scene

import (
	reflect "reflect"

	scene "github.com/ThCompiler/go_game_constractor/director/scriptdirector/scene"
	gomock "github.com/golang/mock/gomock"
)

// MockScene is a mock of Scene interface.
type MockScene struct {
	ctrl     *gomock.Controller
	recorder *MockSceneMockRecorder
}

// MockSceneMockRecorder is the mock recorder for MockScene.
type MockSceneMockRecorder struct {
	mock *MockScene
}

// NewMockScene creates a new mock instance.
func NewMockScene(ctrl *gomock.Controller) *MockScene {
	mock := &MockScene{ctrl: ctrl}
	mock.recorder = &MockSceneMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScene) EXPECT() *MockSceneMockRecorder {
	return m.recorder
}

// GetSceneInfo mocks base method.
func (m *MockScene) GetSceneInfo(arg0 *scene.Context) (scene.Info, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSceneInfo", arg0)
	ret0, _ := ret[0].(scene.Info)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetSceneInfo indicates an expected call of GetSceneInfo.
func (mr *MockSceneMockRecorder) GetSceneInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSceneInfo", reflect.TypeOf((*MockScene)(nil).GetSceneInfo), arg0)
}

// Next mocks base method.
func (m *MockScene) Next() scene.Scene {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(scene.Scene)
	return ret0
}

// Next indicates an expected call of Next.
func (mr *MockSceneMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockScene)(nil).Next))
}

// React mocks base method.
func (m *MockScene) React(arg0 *scene.Context) scene.Command {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "React", arg0)
	ret0, _ := ret[0].(scene.Command)
	return ret0
}

// React indicates an expected call of React.
func (mr *MockSceneMockRecorder) React(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "React", reflect.TypeOf((*MockScene)(nil).React), arg0)
}
